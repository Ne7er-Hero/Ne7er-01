---
- name: Local user mutual SSH trust based on host in a.txt
  hosts: all
  become: yes

  vars:
    user_info_file: "/path/to/a.txt"  # 这里换成你的a.txt路径

  tasks:
    - name: Read user info file
      slurp:
        src: "{{ user_info_file }}"
      register: user_info_raw

    - name: Parse user info lines into structured data
      set_fact:
        user_info_list: >-
          {{
            user_info_raw.content | b64decode | splitlines() | map('split', ',') | list
          }}

    - name: Filter users for this host
      set_fact:
        users: >-
          {{
            dict(
              user_info_list
              | selectattr('0', 'equalto', inventory_hostname)
              | map('slice', [1, None])
              | map('first', 'last')
              | list
            )
          }}

    - name: Debug show filtered users
      debug:
        var: users

    - name: Ensure .ssh directory for each user
      file:
        path: "/home/{{ item }}/.ssh"
        state: directory
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: '0700'
      loop: "{{ users.keys() | list }}"

    - name: Generate ssh key if not exists
      become_user: "{{ item }}"
      shell: ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa <<< y
      args:
        creates: "/home/{{ item }}/.ssh/id_rsa"
      loop: "{{ users.keys() | list }}"

    - name: Read all public keys into a dictionary
      slurp:
        src: "/home/{{ item }}/.ssh/id_rsa.pub"
      register: user_keys
      loop: "{{ users.keys() | list }}"

    - name: Build pub_keys dict {username: pubkey}
      set_fact:
        pub_keys: >-
          {{ pub_keys | default({}) | combine({ (item.item): (item.content | b64decode) }) }}
      loop: "{{ user_keys.results }}"

    - name: Inject related pubkeys into authorized_keys
      authorized_key:
        user: "{{ user }}"
        key: "{{ pub_keys[related_user] }}"
        manage_dir: no
        state: present
      loop: "{{ users.keys() | list }}"
      loop_control:
        loop_var: user
      with_nested:
        - "{{ users.keys() | list }}"
        - "{{ users.keys() | list }}"
      when: related_user in users[user] and user != related_user
